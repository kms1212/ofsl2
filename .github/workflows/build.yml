name: build

on:
  push:
    branches: [ "main", "gh-actions" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
  
      matrix:
        os: [ubuntu-latest, macos-latest]
        build_type: [Release]
        c_compiler: [gcc, clang]
        library_type: [STATIC, SHARED]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: macos-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++

    steps:
    - uses: actions/checkout@v3

    - name: Set reusable strings
      # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Install prerequisites
      if: ${{ runner.os == 'Linux' }}
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: zlib1g-dev libcunit1 libcunit1-dev mtools xorriso
        version: 1.2

    - name: Install prerequisites
      if: ${{ runner.os == 'macOS' }}
      shell: bash
      run : |
        brew install zlib cunit mtools xorriso

    - name: Configure CMake
      run: >
        cmake \
          -B ${{ steps.strings.outputs.build-output-dir }} \
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DBUILD_TESTING=TRUE \
          -DBUILD_CXX_WRAPPER=FALSE \
          -S ${{ github.workspace }}

    - name: Build
      run: >
        cmake \
          --build ${{ steps.strings.outputs.build-output-dir }} \
          --config ${{ matrix.build_type }} \
          --parallel 4

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: >
        ctest \
          --test-dir ${{ steps.strings.outputs.build-output-dir }}/tests \
          --output-on-failure \
          --build-config ${{ matrix.build_type }}
