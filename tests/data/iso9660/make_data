#!/bin/bash

# this tool requires GNU xorriso, GNU coreutils, dd, and cat.

generate_file() {
    local filename="$1"
    local filesize="$2"

    if [ ! -f "$filename" ]; then
        dd if=/dev/urandom of="$filename" bs="$filesize" count=1
    fi
    
    echo "$filesize 2024-02-28 13:55:58 $(md5sum "$filename" | cut -d' ' -f1)"
}

FILE_BIN_INFO="$(generate_file file.bin 1024)"
LONGFILENAME_BIN_INFO="$(generate_file longfilename.bin 1024)"
UTEST1_BIN_INFO="$(generate_file 유니코드.bin 1024)"

mkdir -p image_files
cp -n file.bin image_files
cp -n longfilename.bin image_files
cp -n 유니코드.bin image_files
mkdir -p image_files/directory1
cp -f file.bin image_files/directory1

xorrisofs \
    -o image.iso \
    -R -J \
    -V "ISO9660FS TEST" \
    -P "ISO9660FS TEST" \
    -p "ISO9660FS TEST" \
    -A "ISO9660FS TEST" \
    -copyright "SOME_FILE" \
    -abstract "SOME_FILE" \
    -biblio "SOME_FILE" \
    --set_all_file_dates 2024022813555800 \
    -graft-points \
    /=image_files

cat > image-tree.txt <<EOF
# directory tree of image.iso

.. dir
. dir
directory1 dir
file.bin $FILE_BIN_INFO
longfilename.bin $LONGFILENAME_BIN_INFO
유니코드.bin $UTEST1_BIN_INFO

$ directory1
.. dir
. dir
file.bin $FILE_BIN_INFO

EOF
