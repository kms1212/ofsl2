#!/bin/bash

# this tool requires GNU Mtools, GNU coreutils, dd, and cat.

generate_file() {
    local filename="$1"
    local filesize="$2"

    if [ ! -f "$filename" ]; then
        dd if=/dev/urandom of="$filename" bs="$filesize" count=1
    fi
    
    echo "$filesize $(stat -f '%Sc' -t '%Y-%m-%d %H:%M') $(md5sum "$filename" | cut -d' ' -f1)"
}

FILE_BIN_INFO="$(generate_file file.bin 1024)"
LONGFILENAME_BIN_INFO="$(generate_file longfilename.bin 1024)"
UTEST1_BIN_INFO="$(generate_file 유니코드.bin 1024)"

dd if=/dev/zero of=fat12.img bs=1048576 count=1
dd if=/dev/zero of=fat16.img bs=1048576 count=16
dd if=/dev/zero of=fat32.img bs=1048576 count=64

mformat -i fat12.img -v "FAT Filesystem Test"
mformat -i fat16.img -v "FAT Filesystem Test"
mformat -F -i fat32.img -v "FAT Filesystem Test"

mcopy -i fat12.img -p -m -- file.bin ::
mcopy -i fat12.img -p -m -- longfilename.bin ::
mcopy -i fat12.img -p -m -- 유니코드.bin ::
mmd -i fat12.img ::/directory1
mcopy -i fat12.img -p -m -- file.bin ::/directory1
mmd -i fat12.img ::/directory2
mcopy -i fat12.img -p -m -- longfilename.bin ::/directory2

cat > fat12-tree.txt <<EOF
# directory tree of fat12.img
# file_name file_size date_created time_created md5_checksum

FILE.BIN $FILE_BIN_INFO
longfilename.bin $LONGFILENAME_BIN_INFO
유니코드.bin $UTEST1_BIN_INFO
directory1 dir
directory2 dir

$ directory1
. dir
.. dir
FILE.BIN $FILE_BIN_INFO

$ directory2
. dir
.. dir
longfilename.bin $LONGFILENAME_BIN_INFO
EOF
cat > fat12cl-tree.txt <<EOF
# directory tree of fat12.img
# case_sensitive = 1
# sfn_lowercase = 1
# unicode_enabled = 0
# file_name file_size date_created time_created md5_checksum

file.bin $FILE_BIN_INFO
longfilename.bin $LONGFILENAME_BIN_INFO
????.bin $UTEST1_BIN_INFO
directory1 dir
directory2 dir

$ directory1
. dir
.. dir
file.bin $FILE_BIN_INFO

$ directory2
. dir
.. dir
longfilename.bin $LONGFILENAME_BIN_INFO
EOF
cat > fat12clu-tree.txt <<EOF
# directory tree of fat12.img
# case_sensitive = 1
# sfn_lowercase = 1
# file_name file_size date_created time_created md5_checksum

file.bin $FILE_BIN_INFO
longfilename.bin $LONGFILENAME_BIN_INFO
유니코드.bin $UTEST1_BIN_INFO
directory1 dir
directory2 dir

$ directory1
. dir
.. dir
file.bin $FILE_BIN_INFO

$ directory2
. dir
.. dir
longfilename.bin $LONGFILENAME_BIN_INFO
EOF
cat > fat12csl-tree.txt <<EOF
# directory tree of fat12.img
# case_sensitive = 1
# lfn_enabled = 0
# sfn_lowercase = 1
# file_name file_size date_created time_created md5_checksum

file.bin $FILE_BIN_INFO
longfi~1.bin $LONGFILENAME_BIN_INFO
~1.bin $UTEST1_BIN_INFO
direct~1 dir
direct~2 dir

$ direct~1
. dir
.. dir
file.bin $FILE_BIN_INFO

$ direct~2
. dir
.. dir
longfi~1.bin $LONGFILENAME_BIN_INFO
EOF

mcopy -i fat16.img -p -m -- file.bin ::
mcopy -i fat16.img -p -m -- longfilename.bin ::
mcopy -i fat16.img -p -m -- 유니코드.bin ::
mmd -i fat16.img ::/directory1
mcopy -i fat16.img -p -m -- file.bin ::/directory1
mmd -i fat16.img ::/directory2
mcopy -i fat16.img -p -m -- longfilename.bin ::/directory2

cat > fat16-tree.txt <<EOF
# directory tree of fat16.img
# file_name file_size date_created time_created md5_checksum

FILE.BIN $FILE_BIN_INFO
longfilename.bin $LONGFILENAME_BIN_INFO
유니코드.bin $UTEST1_BIN_INFO
directory1 dir
directory2 dir

$ directory1
. dir
.. dir
FILE.BIN $FILE_BIN_INFO

$ directory2
. dir
.. dir
longfilename.bin $LONGFILENAME_BIN_INFO
EOF

mcopy -i fat32.img -p -m -- file.bin ::
mcopy -i fat32.img -p -m -- longfilename.bin ::
mcopy -i fat32.img -p -m -- 유니코드.bin ::
mmd -i fat32.img ::/directory1
mcopy -i fat32.img -p -m -- file.bin ::/directory1
mmd -i fat32.img ::/directory2
mcopy -i fat32.img -p -m -- longfilename.bin ::/directory2

cat > fat32-tree.txt <<EOF
# directory tree of fat32.img
# file_name file_size date_created time_created md5_checksum

FILE.BIN $FILE_BIN_INFO
longfilename.bin $LONGFILENAME_BIN_INFO
유니코드.bin $UTEST1_BIN_INFO
directory1 dir
directory2 dir

$ directory1
. dir
.. dir
FILE.BIN $FILE_BIN_INFO

$ directory2
. dir
.. dir
longfilename.bin $LONGFILENAME_BIN_INFO
EOF
